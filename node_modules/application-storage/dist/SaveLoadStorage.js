"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function loadFromLocalStorage(valueName) {
    try {
        var serializedValue = localStorage.getItem("" + valueName);
        if (serializedValue === null || serializedValue === undefined || serializedValue === 'undefined') {
            return undefined;
        }
        return JSON.parse(serializedValue);
    }
    catch (err) {
        console.error(err);
        return undefined;
    }
}
exports.loadFromLocalStorage = loadFromLocalStorage;
function loadAllFromLocalStorage() {
    var allKeys = {};
    for (var counter = 0; counter < localStorage.length; counter++) {
        var key = localStorage.key(counter);
        if (key) {
            allKeys[key] = loadFromLocalStorage(key);
        }
    }
    return allKeys;
}
exports.loadAllFromLocalStorage = loadAllFromLocalStorage;
;
function loadFromSessionStorage(valueName) {
    try {
        var serializedValue = sessionStorage.getItem("" + valueName);
        if (serializedValue === null || serializedValue === undefined || serializedValue === 'undefined') {
            return undefined;
        }
        return JSON.parse(serializedValue);
    }
    catch (err) {
        console.error(err);
        return undefined;
    }
}
exports.loadFromSessionStorage = loadFromSessionStorage;
function loadAllFromSessionStorage() {
    var allKeys = {};
    for (var counter = 0; counter < sessionStorage.length; counter++) {
        var key = sessionStorage.key(counter);
        if (key) {
            allKeys[key] = loadFromSessionStorage(key);
        }
    }
    return allKeys;
}
exports.loadAllFromSessionStorage = loadAllFromSessionStorage;
;
function removeFromLocalStorage(valueName) {
    try {
        localStorage.removeItem("" + valueName);
    }
    catch (err) {
        console.error(err);
    }
}
exports.removeFromLocalStorage = removeFromLocalStorage;
function removeFromSessionStorage(valueName) {
    try {
        sessionStorage.removeItem("" + valueName);
    }
    catch (err) {
        console.error(err);
    }
}
exports.removeFromSessionStorage = removeFromSessionStorage;
function saveToLocalStorage(valueName, value) {
    try {
        var serializedState = JSON.stringify(value);
        localStorage.setItem("" + valueName, serializedState);
    }
    catch (err) {
        console.error(err);
    }
}
exports.saveToLocalStorage = saveToLocalStorage;
function saveToSessionStorage(valueName, value) {
    try {
        var serializedState = JSON.stringify(value);
        sessionStorage.setItem("" + valueName, serializedState);
    }
    catch (err) {
        console.error(err);
    }
}
exports.saveToSessionStorage = saveToSessionStorage;
//# sourceMappingURL=SaveLoadStorage.js.map