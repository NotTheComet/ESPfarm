{"version":3,"file":"SaveLoadHelper.js","sourceRoot":"","sources":["../src/SaveLoadHelper.ts"],"names":[],"mappings":";AAAA,mEAAmE;AACnE,8CAA8C;AAC9C,iEAAiE;AACjE,eAAe;AACf,mEAAmE;;;AAEnE,uEAAmD;AAEnD,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,+DAAY,CAAA;IACZ,mEAAc,CAAA;AAClB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAGvB;AAED;IAII,wBAAY,IAAY,EAAE,YAA0B;QAApD,iBAGC;QAED,aAAQ,GAAG;YACP,QAAQ,KAAI,CAAC,YAAY,EAAE;gBACvB,KAAK,YAAY,CAAC,YAAY;oBAC1B,OAAO,cAAc,CAAC,0BAA0B,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBAChE,KAAK,YAAY,CAAC,cAAc;oBAC5B,OAAO,cAAc,CAAC,4BAA4B,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;aACrE;QACL,CAAC,CAAA;QAED,aAAQ,GAAG,UAAC,KAAU;YAClB,QAAQ,KAAI,CAAC,YAAY,EAAE;gBACvB,KAAK,YAAY,CAAC,YAAY;oBAC1B,cAAc,CAAC,uBAAuB,CAAC,KAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;oBACzD,MAAM;gBACV,KAAK,YAAY,CAAC,cAAc;oBAC5B,cAAc,CAAC,yBAAyB,CAAC,KAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;oBAC3D,MAAM;aACb;QACL,CAAC,CAAC;QAtBE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IAqBL,qBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,wCAAc;AA8B3B,kBAAe,cAAc,CAAC","sourcesContent":["// ----------------------------------------------------------------\r\n// <copyright company=\"Microsoft Corporation\">\r\n//     Copyright (c) Microsoft Corporation.  All rights reserved.\r\n// </copyright>\r\n// ----------------------------------------------------------------\r\n\r\nimport * as SessionContext from './SessionContext';\r\n\r\nexport enum SaveLocation {\r\n    LocalStorage,\r\n    SessionStorage,\r\n}\r\n\r\nexport class SaveLoadHelper {\r\n    readonly name: string;\r\n    readonly saveLocation: SaveLocation;\r\n\r\n    constructor(name: string, saveLocation: SaveLocation) {\r\n        this.name = name;\r\n        this.saveLocation = saveLocation;\r\n    }\r\n\r\n    getValue = (): any => {\r\n        switch (this.saveLocation) {\r\n            case SaveLocation.LocalStorage:\r\n                return SessionContext.loadObjectFromLocalStorage(this.name);\r\n            case SaveLocation.SessionStorage:\r\n                return SessionContext.loadObjectFromSessionStorage(this.name);\r\n        }\r\n    }\r\n\r\n    setValue = (value: any) => {\r\n        switch (this.saveLocation) {\r\n            case SaveLocation.LocalStorage:\r\n                SessionContext.saveValueToLocalStorage(this.name, value);\r\n                break;\r\n            case SaveLocation.SessionStorage:\r\n                SessionContext.saveValueToSessionStorage(this.name, value);\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\nexport default SaveLoadHelper;\r\n"]}