{"version":3,"file":"SaveLoadLocalStorage.js","sourceRoot":"","sources":["../src/SaveLoadLocalStorage.ts"],"names":[],"mappings":";;;AACA,yEAAqD;AAErD;IAGI,8BAAY,IAAY;QAAxB,iBAEC;QAED,aAAQ,GAAG;YACP,OAAO,eAAe,CAAC,oBAAoB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAA;QAED,iBAAY,GAAG;YACX,OAAO,eAAe,CAAC,uBAAuB,EAAE,CAAC;QACrD,CAAC,CAAA;QAED,gBAAW,GAAG;YACV,eAAe,CAAC,sBAAsB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QAEF,aAAQ,GAAG,UAAC,KAAU;YAClB,eAAe,CAAC,kBAAkB,CAAC,KAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC;QAjBE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAiBL,2BAAC;AAAD,CAAC,AAtBD,IAsBC","sourcesContent":["import { SaveLoad } from './SaveLoadTypes';\r\nimport * as SaveLoadStorage from './SaveLoadStorage';\r\n\r\nexport default class SaveLoadLocalStorage implements SaveLoad {\r\n    readonly name: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    getValue = (): any => {\r\n        return SaveLoadStorage.loadFromLocalStorage(this.name);\r\n    }\r\n\r\n    getAllValues = () => {\r\n        return SaveLoadStorage.loadAllFromLocalStorage();\r\n    }\r\n\r\n    removeValue = () => {\r\n        SaveLoadStorage.removeFromLocalStorage(this.name);\r\n    };\r\n\r\n    setValue = (value: any) => {\r\n        SaveLoadStorage.saveToLocalStorage(this.name, value);\r\n    };\r\n}\r\n"]}