{"version":3,"file":"SessionAppStorage.js","sourceRoot":"","sources":["../src/SessionAppStorage.ts"],"names":[],"mappings":";;;AACA,+DAA2C;AAE3C;IAGI,2BAAY,IAAY;QAAxB,iBAEC;QAED,aAAQ,GAAG;YACP,OAAO,UAAU,CAAC,sBAAsB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC,CAAA;QAED,iBAAY,GAAG;YACX,OAAO,UAAU,CAAC,yBAAyB,EAAE,CAAC;QAClD,CAAC,CAAA;QAED,gBAAW,GAAG;YACV,UAAU,CAAC,wBAAwB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACnD,CAAC,CAAC;QAEF,aAAQ,GAAG,UAAC,KAAU;YAClB,UAAU,CAAC,oBAAoB,CAAC,KAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtD,CAAC,CAAC;QAjBE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAiBL,wBAAC;AAAD,CAAC,AAtBD,IAsBC","sourcesContent":["import { IAppStorage } from './AppStorageTypes';\r\nimport * as AppStorage from './AppStorage';\r\n\r\nexport default class SessionAppStorage implements IAppStorage {\r\n    readonly name: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    getValue = (): any => {\r\n        return AppStorage.loadFromSessionStorage(this.name);\r\n    }\r\n\r\n    getAllValues = () => {\r\n        return AppStorage.loadAllFromSessionStorage();\r\n    }\r\n\r\n    removeValue = () => {\r\n        AppStorage.removeFromSessionStorage(this.name);\r\n    };\r\n\r\n    setValue = (value: any) => {\r\n        AppStorage.saveToSessionStorage(this.name, value);\r\n    };\r\n}\r\n"]}